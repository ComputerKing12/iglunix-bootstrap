#!/bin/sh

stat $REPO_ROOT/.boot-llvm >/dev/null 2>/dev/null \
&& exit 0

mkdir -p $BUILD/llvm-$LLVM_VER

cd $BUILD/llvm-$LLVM_VER

#C_CXX_FLAGS="--unwindlib=libunwind -stdlib=libc++ --rtlib=compiler-rt -nostdinc -nostdinc++ -I$CHROOT/usr/include/c++/v1 -I$CHROOT/usr/include/ -I$CHROOT/usr/lib/clang/12.0.1/include"

C_CXX_FLAGS="--unwindlib=libunwind -stdlib=libc++ --rtlib=compiler-rt -nostdinc++ -isystem $CHROOT/usr/include/c++/v1 -fPIC -v"
C_C_FLAGS="--unwindlib=libunwind -stdlib=libc++ --rtlib=compiler-rt -fPIC -v"

cmake -G Ninja -Wno-dev $SOURCES/llvm-$LLVM_VER/llvm \
-DCMAKE_CROSSCOMPILING=True \
-DCMAKE_C_COMPILER_TARGET=$ARCH-unknown-linux-musl \
-DCMAKE_C_COMPILER=/usr/bin/clang \
-DCMAKE_CXX_COMPILER_TARGET=$ARCH-unknown-linux-musl \
-DCMAKE_CXX_COMPILER=/usr/bin/clang++ \
-DCMAKE_SYSROOT=$CHROOT \
-DCMAKE_INSTALL_PREFIX=/usr \
-DCMAKE_BUILD_TYPE=Release \
-DCMAKE_CXX_FLAGS_INIT="$C_CXX_FLAGS" \
-DCMAKE_C_FLAGS_INIT="$C_C_FLAGS" \
-DLLVM_TABLEGEN=$BUILD/tblgen-$LLVM_VER/bin/llvm-tblgen \
-DCLANG_TABLEGEN=$BUILD/tblgen-$LLVM_VER/bin/clang-tblgen \
-DLLVM_VERSION_SUFFIX="" \
-DLLVM_APPEND_VC_REV=OFF \
-DLLVM_ENABLE_PROJECTS="llvm;lld;clang" \
-DLLVM_ENABLE_LLD=ON \
-DLLVM_TARGETS_TO_BUILD="X86" \
-DLLVM_INSTALL_BINUTILS_SYMLINKS=ON \
-DLLVM_INSTALL_CCTOOLS_SYMLINKS=ON \
-DLLVM_INCLUDE_EXAMPLES=OFF \
-DLLVM_ENABLE_PIC=ON \
-DLLVM_ENABLE_LTO=OFF \
-DLLVM_INCLUDE_GO_TESTS=OFF \
-DLLVM_INCLUDE_TESTS=OFF \
-DLLVM_HOST_TRIPLE=$ARCH-unknown-linux-musl \
-DLLVM_DEFAULT_TARGET_TRIPLE=$ARCH-unknown-linux-musl \
-DLLVM_ENABLE_LIBXML2=OFF \
-DLLVM_ENABLE_ZLIB=OFF\
-DLLVM_BUILD_LLVM_DYLIB=ON \
-DLLVM_LINK_LLVM_DYLIB=ON \
-DLLVM_OPTIMIZED_TABLEGEN=ON \
-DLLVM_INCLUDE_BENCHMARKS=OFF \
-DLLVM_INCLUDE_DOCS=ON \
-DLLVM_TOOL_LLVM_ITANIUM_DEMANGLE_FUZZER_BUILD=OFF \
-DLLVM_TOOL_LLVM_MC_ASSEMBLE_FUZZER_BUILD=OFF \
-DLLVM_TOOL_LLVM_MC_DISASSEMBLE_FUZZER_BUILD=OFF \
-DLLVM_TOOL_LLVM_OPT_FUZZER_BUILD=OFF \
-DLLVM_TOOL_LLVM_MICROSOFT_DEMANGLE_FUZZER_BUILD=OFF \
-DLLVM_TOOL_LLVM_GO_BUILD=OFF \
-DLLVM_INSTALL_UTILS=ON \
-DLLVM_ENABLE_LIBCXX=ON \
-DLLVM_ENABLE_LIBEDIT=OFF \
-DLLVM_ENABLE_TERMINFO=OFF \
-DLIBCXX_ENABLE_FILESYSTEM=ON \
-DLIBCXX_USE_COMPILER_RT=ON \
-DLIBCXX_HAS_MUSL_LIBC=ON \
-DLIBCXX_HAS_ATOMIC_LIB=OFF \
-DLIBCXX_ENABLE_STATIC_ABI_LIBRARY=ON \
-DLIBCXX_STATICALLY_LINK_ABI_IN_SHARED_LIBRARY=ON \
-DLIBCXX_STATICALLY_LINK_ABI_IN_STATIC_LIBRARY=ON \
-DLIBCXX_INSTALL_LIBRARY=ON \
-DLIBCXXABI_ENABLE_ASSERTIONS=ON \
-DLIBCXXABI_USE_COMPILER_RT=ON \
-DLIBCXXABI_USE_LLVM_UNWINDER=ON \
-DLIBCXXABI_ENABLE_STATIC_UNWINDER=ON \
-DLIBCXXABI_STATICALLY_LINK_UNWINDER_IN_SHARED_LIBRARY=YES \
-DLIBCXXABI_ENABLE_SHARED=OFF \
-DLIBCXXABI_ENABLE_STATIC=ON \
-DLIBCXXABI_INSTALL_LIBRARY=ON \
-DLIBUNWIND_ENABLE_SHARED=ON \
-DLIBUNWIND_ENABLE_STATIC=ON \
-DLIBUNWIND_INSTALL_LIBRARY=ON \
-DLIBUNWIND_USE_COMPILER_RT=ON \
-DCLANG_DEFAULT_LINKER=lld \
-DCLANG_DEFAULT_CXX_STDLIB='libc++' \
-DCLANG_DEFAULT_RTLIB=compiler-rt \
-DCLANG_DEFAULT_UNWINDLIB=libunwind \
-DCLANG_ENABLE_STATIC_ANALYZER=OFF \
-DCLANG_ENABLE_ARCMT=OFF \
-DCLANG_LINK_CLANG_DYLIB=OFF \
-DCOMPILER_RT_USE_BUILTINS_LIBRARY=ON \
-DCOMPILER_RT_DEFAULT_TARGET_ONLY=OFF \
-DCOMPILER_RT_INCLUDE_TESTS=OFF \
-DCOMPILER_RT_BUILD_SANITIZERS=OFF \
-DCOMPILER_RT_BUILD_XRAY=OFF \
-DCOMPILER_RT_BUILD_MEMPROF=OFF \
-DCOMPILER_RT_INCLUDE_TESTS=OFF \
-DCOMPILER_RT_BUILD_LIBFUZZER=OFF \
-DENABLE_EXPERIMENTAL_NEW_PASS_MANAGER=TRUE \
-DHAVE_LIBXAR=OFF


$NINJA

DESTDIR=$CHROOT $NINJA install

cd $REPO_ROOT

touch .boot-llvm
